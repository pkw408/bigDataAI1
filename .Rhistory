result <- unlist(result)
result <- result[result != ""] # 빈 result는 넣어주지 않는다.
review <- c(review,result)  # review 에 계속 덮어씌어준다,
#point
doms <- remDr$findElements(using='css selcetor','li div._iqD')
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
result <- result[result != ""]
point <- c(point,result)
Sys.sleep(1)
}
repeat {
#review
doms <- remDr$findElements(using='css selector','li div.text')
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
result <- result[result != ""] # 빈 result는 넣어주지 않는다.
review <- c(review,result)  # review 에 계속 덮어씌어준다,
#point
doms <- remDr$findElements(using='css selcetor','li div._iqD')
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
result <- result[result != ""]
point <- c(point,result)
Sys.sleep(1)
}
repeat {
#review
doms <- remDr$findElements(using='css selector','li div.text')
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
result <- result[result != ""] # 빈 result는 넣어주지 않는다.
review <- c(review,result)  # review 에 계속 덮어씌어준다,
#다음키
nextLink <- "a.moreReviews"
nextPage <- remDr$findElements(using='css selector',nextLink)
sapply(nextPage, function(x) {x$clickElement()})
Sys.sleep(1)
}
source('C:/KyoungPark/R/Day10.R', encoding = 'UTF-8', echo=TRUE)
review
repeat {
#review
doms <- remDr$findElements(using='css selector','li div.text')
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
result <- result[result != ""] # 빈 result는 넣어주지 않는다.
review <- c(review,result)  # review 에 계속 덮어씌어준다,
#point
doms <- remDr$findElements(using='css selector','li div._iqD')
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
result <- result[result != ""]
point <- c(point,result)
#다음키
nextLink <- "a.moreReviews"
nextPage <- remDr$findElements(using='css selector',nextLink)
sapply(nextPage, function(x) {x$clickElement()})
Sys.sleep(1)
}
repeat {
#review
doms <- remDr$findElements(using='css selector','li div.text')
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
result <- result[result != ""] # 빈 result는 넣어주지 않는다.
review <- c(review,result)  # review 에 계속 덮어씌어준다,
#point
doms <- remDr$findElements(using='css selector','li div._iqD')
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
result <- result[result != ""]
point <- c(point,result)
nextLink <- "a.moreReviews.disabled"
nextPage <- remDr$findElements(using='css selector',nextLink)
if(length(nextPage) != 0){
break;
}
#다음키
nextLink <- "a.moreReviews"
nextPage <- remDr$findElements(using='css selector',nextLink)
sapply(nextPage, function(x) {x$clickElement()})
Sys.sleep(1)
}
review <- NULL
point <- NULL
repeat {
#review
doms <- remDr$findElements(using='css selector','li div.text')
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
result <- result[result != ""] # 빈 result는 넣어주지 않는다.
review <- c(review,result)  # review 에 계속 덮어씌어준다,
#point
doms <- remDr$findElements(using='css selector','li div._iqD')
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
result <- result[result != ""]
point <- c(point,result)
nextLink <- "a.moreReviews.disabled"
nextPage <- remDr$findElements(using='css selector',nextLink)
if(length(nextPage) != 0){
break;
}
#다음키
nextLink <- "a.moreReviews"
nextPage <- remDr$findElements(using='css selector',nextLink)
sapply(nextPage, function(x) {x$clickElement()})
Sys.sleep(1)
}
########################################################################################################################
remDr$open()
remDr$navigate("https://www.hotelscombined.co.kr/hotels/%EC%9D%B4%ED%83%9C%EC%9B%90-%ED%81%AC%EB%9D%BC%EC%9A%B4-%ED%98%B8%ED%85%94,%EC%84%9C%EC%9A%B8,%EB%8C%80%ED%95%9C%EB%AF%BC%EA%B5%AD-c35982-h83176-details/2020-08-20/2020-09-17/2adults?placeId=H1063682&placeName=hotel:Itaewon_Crown_Hotel")
review <- NULL
point <- NULL
repeat {
#review
doms <- remDr$findElements(using='css selector','li div.text')
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
result <- result[result != ""] # 빈 result는 넣어주지 않는다.
review <- c(review,result)  # review 에 계속 덮어씌어준다,
#point
doms <- remDr$findElements(using='css selector','li div._iqD')
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
result <- result[result != ""]
point <- c(point,result)
nextLink <- "a.moreReviews.disabled"
nextPage <- remDr$findElements(using='css selector',nextLink)
if(length(nextPage) != 0){
break;
}
#다음키
nextLink <- "a.moreReviews"
nextPage <- remDr$findElements(using='css selector',nextLink)
sapply(nextPage, function(x) {x$clickElement()})
Sys.sleep(1)
}
review
review_point <- data.frame(review,point)
review_point
repeat {
#review
doms <- remDr$findElements(using='css selector','li div.text')
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
result <- result[result != ""] # 빈 result는 넣어주지 않는다.
review <- c(review,result)  # review 에 계속 덮어씌어준다,
#point
doms <- remDr$findElements(using='css selector','li div._iqD')
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
result <- result[result != ""]
point <- c(point,result)
nextLink <- "a.moreReviews.disabled"
nextPage <- remDr$findElements(using='CSS selector',nextLink)
if(length(nextPage) != 0){
break;
}
#다음키
nextLink <- "a.moreReviews"
nextPage <- remDr$findElements(using='css selector',nextLink)
sapply(nextPage, function(x) {x$clickElement()})
Sys.sleep(1)
}
review <- NULL
point <- NULL
repeat {
#review
doms <- remDr$findElements(using='css selector','li div.text')
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
result <- result[result != ""] # 빈 result는 넣어주지 않는다.
review <- c(review,result)  # review 에 계속 덮어씌어준다,
#point
doms <- remDr$findElements(using='css selector','li div._iqD')
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
result <- result[result != ""]
point <- c(point,result)
nextLink <- "a.moreReviews.disabled"
nextPage <- remDr$findElements(using='css selector',nextLink)
if(length(nextPage) != 0){
break;
}
#다음키
nextLink <- "a.moreReviews"
nextPage <- remDr$findElements(using='css selector',nextLink)
sapply(nextPage, function(x) {x$clickElement()})
Sys.sleep(1)
}
review_point <- data.frame(review,point)
review_point
########################################################################################################################
remDr$open()
remDr$navigate("https://www.hotelscombined.co.kr/hotels/%EC%9D%B4%ED%83%9C%EC%9B%90-%ED%81%AC%EB%9D%BC%EC%9A%B4-%ED%98%B8%ED%85%94,%EC%84%9C%EC%9A%B8,%EB%8C%80%ED%95%9C%EB%AF%BC%EA%B5%AD-c35982-h83176-details/2020-08-20/2020-09-17/2adults?placeId=H1063682&placeName=hotel:Itaewon_Crown_Hotel")
review <- NULL
point <- NULL
repeat {
#review
doms <- remDr$findElements(using='css selector','li div.text')
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
result <- result[result != ""] # 빈 result는 넣어주지 않는다.
review <- c(review,result)  # review 에 계속 덮어씌어준다,
#point
doms <- remDr$findElements(using='css selector','li div._iqD')
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
result <- result[result != ""]
point <- c(point,result)
nextLink <- "a.moreReviews.disabled"
nextPage <- remDr$findElements(using='css selector',nextLink)
if(length(nextPage) != 0){
break;
}
#다음키
nextLink <- "a.moreReviews"
nextPage <- remDr$findElements(using='css selector',nextLink)
sapply(nextPage, function(x) {x$clickElement()})
Sys.sleep(1)
}
review_point <- data.frame(review,point)
review_point
point_mean <- review_point %>% summarise(maen = mean(point))
point_mean <- mean(review_point$point)
point_mean <- mean(review_point$point)
class(review_point$point)
point_mean <- mean(review_point$point)
review_point$point
point
# 베스트 댓글을 읽습니다.
review = NULL
doms <- remDr$findElements(using='css selector',"#cbox_module span.u_cbox_contents")
review
doms <- remDr$findElements(using='css selector',"#cbox_module span.u_cbox_contents")
review <- sapply(doms, function(x) {x$getElementText()})
review <- unlist(review)
review
# https://comic.naver.com/comment/comment.nhn?titleId=683496&no=178
remDr <- remoteDriver(remoteServerAddr = 'localhost',port=4445L, browserName = 'chrome') # localhost : 셀레니움이
remDr$open()
remDr$navigate("https://comic.naver.com/comment/comment.nhn?titleId=683496&no=178")
# 베스트 댓글을 읽습니다.
review = NULL
doms <- remDr$findElements(using='css selector',"#cbox_module span.u_cbox_contents")
review <- sapply(doms, function(x) {x$getElementText()})
review <- unlist(review)
review
for(i in 4:12){
nextLink <- paste("#cbox_module > div > div.u_cbox_paginat > div > a:nth-child (",i,")",sep+"")
print(nextLink)
}
for(i in 4:12){
nextLink <- paste("#cbox_module > div > div.u_cbox_paginat > div > a:nth-child (",i,")",sep="")
print(nextLink)
}
# https://comic.naver.com/comment/comment.nhn?titleId=683496&no=178
remDr <- remoteDriver(remoteServerAddr = 'localhost',port=4445L, browserName = 'chrome') # localhost : 셀레니움이
remDr$open()
# https://comic.naver.com/comment/comment.nhn?titleId=683496&no=178
remDr <- remoteDriver(remoteServerAddr = 'localhost',port=4445L, browserName = 'chrome') # localhost : 셀레니움이
remDr$open()
remDr$navigate("https://comic.naver.com/comment/comment.nhn?titleId=683496&no=178")
review = NULL
repeat {
for(i in 4:12){
nextLink <- paste("#cbox_module > div > div.u_cbox_paginat > div > a:nth-child (",i,")",sep="")
# print(nextLink)
nextPage <- remDr$findElements(using="css selector",nextLink)
if(length(nextPage) != 0){
break;
}
sapply(nextPage, function(x) {x$clickElement()}) # 다음페이지 넘기기기 1-10
Sys.sleep(1)
doms <- remDr$findElements(using='css selector',"#cbox_module span.u_cbox_contents")
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
review <- c(review,result)
}
nextLink <- paste("#cbox_module > div > div.u_cbox_paginat > div > a:nth-child(13)")
nextPage <- remDr$findElements(using="css selector",nextLink)
if(length(nextPage) != 0){
break;
}
sapply(nextPage, function(x) {x$clickElement()}) # 다음페이지 넘기기기 10-11로
Sys.sleep(1)
doms <- remDr$findElements(using='css selector',"#cbox_module span.u_cbox_contents")
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
review <- c(review,result)
}
for(i in 4:12){
nextLink <- paste("#cbox_module > div > div.u_cbox_paginat > div > a:nth-child (",i,")",sep="")
# print(nextLink)
nextPage <- remDr$findElements(using="css selector",nextLink)
if(length(nextPage) != 0){
break;
}
sapply(nextPage, function(x) {x$clickElement()}) # 다음페이지 넘기기기 1-10
Sys.sleep(1)
doms <- remDr$findElements(using='css selector',"#cbox_module span.u_cbox_contents")
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
review <- c(review,result)
}
# https://comic.naver.com/comment/comment.nhn?titleId=683496&no=178
remDr <- remoteDriver(remoteServerAddr = 'localhost',port=4445L, browserName = 'chrome') # localhost : 셀레니움이
remDr$open()
remDr$navigate("https://comic.naver.com/comment/comment.nhn?titleId=683496&no=178")
review = NULL
repeat {
for(i in 4:12){
nextLink <- paste("#cbox_module > div > div.u_cbox_paginat > div > a:nth-child (",i,")",sep="")
# print(nextLink)
nextPage <- remDr$findElements(using="css selector",nextLink)
if(length(nextPage) != 0){
break;
}
sapply(nextPage, function(x) {x$clickElement()}) # 다음페이지 넘기기기 1-10
Sys.sleep(1)
doms <- remDr$findElements(using='css selector',"#cbox_module span.u_cbox_contents")
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
review <- c(review,result)
}
nextLink <- paste("#cbox_module > div > div.u_cbox_paginat > div > a:nth-child(13)")
nextPage <- remDr$findElements(using="css selector",nextLink)
if(length(nextPage) != 0){
break;
}
sapply(nextPage, function(x) {x$clickElement()}) # 다음페이지 넘기기기 10-11로
Sys.sleep(1)
doms <- remDr$findElements(using='css selector',"#cbox_module span.u_cbox_contents")
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
review <- c(review,result)
}
review = NULL
repeat {
for(i in 4:12){
nextLink <- paste("#cbox_module > div > div.u_cbox_paginate > div > a:nth-child (",i,")",sep="")
# print(nextLink)
nextPage <- remDr$findElements(using="css selector",nextLink)
if(length(nextPage) != 0){
break;
}
sapply(nextPage, function(x) {x$clickElement()}) # 다음페이지 넘기기기 1-10
Sys.sleep(1)
doms <- remDr$findElements(using='css selector',"#cbox_module span.u_cbox_contents")
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
review <- c(review,result)
}
nextLink <- paste("#cbox_module > div > div.u_cbox_paginate > div > a:nth-child(13)")
nextPage <- remDr$findElements(using="css selector",nextLink)
if(length(nextPage) != 0){
break;
}
sapply(nextPage, function(x) {x$clickElement()}) # 다음페이지 넘기기기 10-11로
Sys.sleep(1)
doms <- remDr$findElements(using='css selector',"#cbox_module span.u_cbox_contents")
result <- sapply(doms, function(x) {x$getElementText()})
result <- unlist(result)
review <- c(review,result)
}
# https://comic.naver.com/comment/comment.nhn?titleId=683496&no=178
remDr <- remoteDriver(remoteServerAddr = 'localhost',port=4445L, browserName = 'chrome') # localhost : 셀레니움이
remDr$open()
remDr$navigate("https://comic.naver.com/comment/comment.nhn?titleId=683496&no=178")
review = NULL
repeat {
for(i in 4:12){
nextLink <- paste("#cbox_module > div > div.u_cbox_paginate > div > a:nth-child(",i,")", sep="")
nextPage <- remDr$findElements(using="css selector", nextLink)
if (length(nextPage) == 0) {
break
}
sapply(nextPage, function(x) { x$clickElement() })
Sys.sleep(1)
doms <- remDr$findElements(using = "css selector", "#cbox_module span.u_cbox_contents")
result <- sapply(doms, function(x) { x$getElementText() })
result <- unlist(result)
review <- c(review, result)
}
nextLink <- "#cbox_module > div > div.u_cbox_paginate > div > a:nth-child(13)"
nextPage <- remDr$findElements(using="css selector", nextLink)
if (length(nextPage) == 0) {
break
}
sapply(nextPage, function(x) { x$clickElement() })
Sys.sleep(1)
doms <- remDr$findElements(using = "css selector", "#cbox_module span.u_cbox_contents")
result <- sapply(doms, function(x) { x$getElementText() })
result <- unlist(result)
review <- c(review, result)
}
repeat {
for(i in 4:12){
nextLink <- paste("#cbox_module > div > div.u_cbox_paginate > div > a:nth-child(",i,")", sep="")
nextPage <- remDr$findElements(using="css selector", nextLink)
if (length(nextPage) == 0) {
break
}
sapply(nextPage, function(x) { x$clickElement() })
Sys.sleep(1)
doms <- remDr$findElements(using = "css selector", "#cbox_module span.u_cbox_contents")
result <- sapply(doms, function(x) { x$getElementText() })
result <- unlist(result)
review <- c(review, result)
}
nextLink <- "#cbox_module > div > div.u_cbox_paginate > div > a:nth-child(13)"
nextPage <- remDr$findElements(using="css selector", nextLink)
if (length(nextPage) == 0) {
break
}
sapply(nextPage, function(x) { x$clickElement() })
Sys.sleep(1)
doms <- remDr$findElements(using = "css selector", "#cbox_module span.u_cbox_contents")
result <- sapply(doms, function(x) { x$getElementText() })
result <- unlist(result)
review <- c(review, result)
}
write.csv(review, "webtoonReview.csv")
class(movie_review$X)
class(movie_review$x)
class(movie_review$x)
# 데이터 마이님
movie_review <- read.csv("webtoonReview.csv",stringsAsFactors = F)
class(movie_review$x)
library(KoNLP)
library(dplyr)
library(stringr)
review <- movie_review$x
txt <- gsub("[[:punct:][:cntrl:]]","",review)
txt
# 텍스트 마이닝을 실시해서 명사를 추출합니다.
nouns <- extractNoun(txt)
class(nouns)
# 단어별 빈도표를 만들고 데이터프레임으로 변환합니다.
wordCount <-table(nouns)
class(nouns)
nouns <- unlist(nouns)
# 단어별 빈도표를 만들고 데이터프레임으로 변환합니다.
wordCount <-table(nouns)
wordCount
class(wordCount)
df_wordCount <- as.data.frame(wordCount)
class(df_wordCount)
df_wordCount <- rename(df_wordCount, words=nouns, freq=Freq)
class(df_wordCount)
class(df_wordCount$words)
class(df_wordCount$words)
df_wordCount$words <- as.character(df_wordCount$words)
class(df_wordCount$words)
# 불필요한 단어를 제거합니다.
df_wordCount <- df_wordCount %>% filter(nchar(words)>=2 $ nchar(words) <= 6 $ freq >= 2) %>%
arrange(desc(freq))
# 불필요한 단어를 제거합니다.
df_wordCount <- df_wordCount %>% filter(nchar(words)>=2 & nchar(words) <= 6 & freq >= 2) %>%
arrange(desc(freq))
head(df_wordCount,200)
# 숫자로만 구성된 단어를 제거합니다.
df_wordCount$words <- gsub("^[0-9]*$","",df_wordCount$words)
head(df_wordCount,200)
df_wordCount$words <- gsub("^[ㄱ-ㅎ ㅏ-ㅣ]","",df_wordCount$words)
head(df_wordCount,200)
df_wordCount$words <- gsub("^[ㄱ-ㅎㅏ-ㅣ]","",df_wordCount$words)
head(df_wordCount,200)
df_wordCount$words <- gsub("^[ㄱ-ㅎㅏ-ㅣ]*$","",df_wordCount$words)
head(df_wordCount,200)
# ㅋㅋㅋ,ㅎㅎㅎㅎ,ㅜㅜㅜ,ㅠㅠㅠㅠㅠ,와 같이 한글 자음 또는 모음으로만 구성된 단어를 제거합니다.
df_wordCount$words <- gsub("^[ㄱ-ㅎㅏ-ㅣ]*$","",df_wordCount$words)
df_wordCount1 <- df_wordCount
df_wordCount1 <- df_wordCount1 %>%  group_by(words) %>%  summarise(freq=sum(freq))
df_wordCount1
top200 <- df_wordCount1 %>% arrange(desc(freq)) %>%  head(200)
top200
library(wordcloud)
library(RColorBrewer)
pal <- brewer.pal(8,"Dark2")
wordcloud(
words = top200$words,
freq = top200$freq,
min.freq = 2,
max.freq = 200,
random.order = F,
rot.per = 0.2,
scale = c(7,0.2),
colors = pal
)
wordcloud(
words = top200$words,
freq = top200$freq,
min.freq = 2,
max.freq = 200,
random.order = F,
rot.per = 0.2,
scale = c(7,0.2),
colors = pal
)
wordcloud(
words = top200$words,
freq = top200$freq,
min.freq = 2,
max.freq = 200,
random.order = F,
rot.per = 0.2,
scale = c(7,0.2),
colors = pal
)
